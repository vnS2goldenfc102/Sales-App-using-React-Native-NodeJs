{"ast":null,"code":"import { getHeaderTitle, Header, HeaderBackButton, SafeAreaProviderCompat, Screen } from '@react-navigation/elements';\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nvar TRANSPARENT_PRESENTATIONS = ['transparentModal', 'containedTransparentModal'];\nexport default function NativeStackView(_ref) {\n  var state = _ref.state,\n    descriptors = _ref.descriptors;\n  return React.createElement(SafeAreaProviderCompat, null, React.createElement(View, {\n    style: styles.container\n  }, state.routes.map(function (route, i) {\n    var _state$routes, _state$routes2;\n    var isFocused = state.index === i;\n    var canGoBack = i !== 0;\n    var previousKey = (_state$routes = state.routes[i - 1]) === null || _state$routes === void 0 ? void 0 : _state$routes.key;\n    var nextKey = (_state$routes2 = state.routes[i + 1]) === null || _state$routes2 === void 0 ? void 0 : _state$routes2.key;\n    var previousDescriptor = previousKey ? descriptors[previousKey] : undefined;\n    var nextDescriptor = nextKey ? descriptors[nextKey] : undefined;\n    var _descriptors$route$ke = descriptors[route.key],\n      options = _descriptors$route$ke.options,\n      navigation = _descriptors$route$ke.navigation,\n      render = _descriptors$route$ke.render;\n    var header = options.header,\n      headerShown = options.headerShown,\n      headerTintColor = options.headerTintColor,\n      headerBackImageSource = options.headerBackImageSource,\n      headerLeft = options.headerLeft,\n      headerRight = options.headerRight,\n      headerTitle = options.headerTitle,\n      headerTitleAlign = options.headerTitleAlign,\n      headerTitleStyle = options.headerTitleStyle,\n      headerStyle = options.headerStyle,\n      headerShadowVisible = options.headerShadowVisible,\n      headerTransparent = options.headerTransparent,\n      headerBackground = options.headerBackground,\n      headerBackTitle = options.headerBackTitle,\n      presentation = options.presentation,\n      contentStyle = options.contentStyle;\n    var nextPresentation = nextDescriptor === null || nextDescriptor === void 0 ? void 0 : nextDescriptor.options.presentation;\n    return React.createElement(Screen, {\n      key: route.key,\n      focused: isFocused,\n      route: route,\n      navigation: navigation,\n      headerShown: headerShown,\n      headerTransparent: headerTransparent,\n      header: header !== undefined ? header({\n        back: previousDescriptor ? {\n          title: getHeaderTitle(previousDescriptor.options, previousDescriptor.route.name)\n        } : undefined,\n        options: options,\n        route: route,\n        navigation: navigation\n      }) : React.createElement(Header, {\n        title: getHeaderTitle(options, route.name),\n        headerTintColor: headerTintColor,\n        headerLeft: typeof headerLeft === 'function' ? function (_ref2) {\n          var tintColor = _ref2.tintColor;\n          return headerLeft({\n            tintColor: tintColor,\n            canGoBack: canGoBack,\n            label: headerBackTitle\n          });\n        } : headerLeft === undefined && canGoBack ? function (_ref3) {\n          var tintColor = _ref3.tintColor;\n          return React.createElement(HeaderBackButton, {\n            tintColor: tintColor,\n            backImage: headerBackImageSource !== undefined ? function () {\n              return React.createElement(Image, {\n                source: headerBackImageSource,\n                style: [styles.backImage, {\n                  tintColor: tintColor\n                }]\n              });\n            } : undefined,\n            onPress: navigation.goBack,\n            canGoBack: canGoBack\n          });\n        } : headerLeft,\n        headerRight: typeof headerRight === 'function' ? function (_ref4) {\n          var tintColor = _ref4.tintColor;\n          return headerRight({\n            tintColor: tintColor,\n            canGoBack: canGoBack\n          });\n        } : headerRight,\n        headerTitle: typeof headerTitle === 'function' ? function (_ref5) {\n          var children = _ref5.children,\n            tintColor = _ref5.tintColor;\n          return headerTitle({\n            children: children,\n            tintColor: tintColor\n          });\n        } : headerTitle,\n        headerTitleAlign: headerTitleAlign,\n        headerTitleStyle: headerTitleStyle,\n        headerTransparent: headerTransparent,\n        headerShadowVisible: headerShadowVisible,\n        headerBackground: headerBackground,\n        headerStyle: headerStyle\n      }),\n      style: [StyleSheet.absoluteFill, {\n        display: isFocused || nextPresentation != null && TRANSPARENT_PRESENTATIONS.includes(nextPresentation) ? 'flex' : 'none'\n      }, presentation != null && TRANSPARENT_PRESENTATIONS.includes(presentation) ? {\n        backgroundColor: 'transparent'\n      } : null]\n    }, React.createElement(View, {\n      style: [styles.contentContainer, contentStyle]\n    }, render()));\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  contentContainer: {\n    flex: 1\n  },\n  backImage: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain'\n  }\n});","map":{"version":3,"sources":["NativeStackView.tsx"],"names":["getHeaderTitle","Header","HeaderBackButton","SafeAreaProviderCompat","Screen","React","TRANSPARENT_PRESENTATIONS","NativeStackView","state","descriptors","styles","container","routes","map","route","i","isFocused","index","canGoBack","previousKey","key","nextKey","previousDescriptor","undefined","nextDescriptor","options","navigation","render","header","headerShown","headerTintColor","headerBackImageSource","headerLeft","headerRight","headerTitle","headerTitleAlign","headerTitleStyle","headerStyle","headerShadowVisible","headerTransparent","headerBackground","headerBackTitle","presentation","contentStyle","nextPresentation","back","title","name","tintColor","label","backImage","goBack","children","StyleSheet","absoluteFill","display","includes","backgroundColor","contentContainer","create","flex","height","width","margin","resizeMode"],"mappings":"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","sourcesContent":["import {\n  getHeaderTitle,\n  Header,\n  HeaderBackButton,\n  SafeAreaProviderCompat,\n  Screen,\n} from '@react-navigation/elements';\nimport type {\n  ParamListBase,\n  StackNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Image, StyleSheet, View } from 'react-native';\n\nimport type {\n  NativeStackDescriptorMap,\n  NativeStackNavigationHelpers,\n} from '../types';\n\ntype Props = {\n  state: StackNavigationState<ParamListBase>;\n  // This is used for the native implementation of the stack.\n  // eslint-disable-next-line react/no-unused-prop-types\n  navigation: NativeStackNavigationHelpers;\n  descriptors: NativeStackDescriptorMap;\n};\n\nconst TRANSPARENT_PRESENTATIONS = [\n  'transparentModal',\n  'containedTransparentModal',\n];\n\nexport default function NativeStackView({ state, descriptors }: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <View style={styles.container}>\n        {state.routes.map((route, i) => {\n          const isFocused = state.index === i;\n          const canGoBack = i !== 0;\n          const previousKey = state.routes[i - 1]?.key;\n          const nextKey = state.routes[i + 1]?.key;\n          const previousDescriptor = previousKey\n            ? descriptors[previousKey]\n            : undefined;\n          const nextDescriptor = nextKey ? descriptors[nextKey] : undefined;\n          const { options, navigation, render } = descriptors[route.key];\n\n          const {\n            header,\n            headerShown,\n            headerTintColor,\n            headerBackImageSource,\n            headerLeft,\n            headerRight,\n            headerTitle,\n            headerTitleAlign,\n            headerTitleStyle,\n            headerStyle,\n            headerShadowVisible,\n            headerTransparent,\n            headerBackground,\n            headerBackTitle,\n            presentation,\n            contentStyle,\n          } = options;\n\n          const nextPresentation = nextDescriptor?.options.presentation;\n\n          return (\n            <Screen\n              key={route.key}\n              focused={isFocused}\n              route={route}\n              navigation={navigation}\n              headerShown={headerShown}\n              headerTransparent={headerTransparent}\n              header={\n                header !== undefined ? (\n                  header({\n                    back: previousDescriptor\n                      ? {\n                          title: getHeaderTitle(\n                            previousDescriptor.options,\n                            previousDescriptor.route.name\n                          ),\n                        }\n                      : undefined,\n                    options,\n                    route,\n                    navigation,\n                  })\n                ) : (\n                  <Header\n                    title={getHeaderTitle(options, route.name)}\n                    headerTintColor={headerTintColor}\n                    headerLeft={\n                      typeof headerLeft === 'function'\n                        ? ({ tintColor }) =>\n                            headerLeft({\n                              tintColor,\n                              canGoBack,\n                              label: headerBackTitle,\n                            })\n                        : headerLeft === undefined && canGoBack\n                        ? ({ tintColor }) => (\n                            <HeaderBackButton\n                              tintColor={tintColor}\n                              backImage={\n                                headerBackImageSource !== undefined\n                                  ? () => (\n                                      <Image\n                                        source={headerBackImageSource}\n                                        style={[\n                                          styles.backImage,\n                                          { tintColor },\n                                        ]}\n                                      />\n                                    )\n                                  : undefined\n                              }\n                              onPress={navigation.goBack}\n                              canGoBack={canGoBack}\n                            />\n                          )\n                        : headerLeft\n                    }\n                    headerRight={\n                      typeof headerRight === 'function'\n                        ? ({ tintColor }) =>\n                            headerRight({ tintColor, canGoBack })\n                        : headerRight\n                    }\n                    headerTitle={\n                      typeof headerTitle === 'function'\n                        ? ({ children, tintColor }) =>\n                            headerTitle({ children, tintColor })\n                        : headerTitle\n                    }\n                    headerTitleAlign={headerTitleAlign}\n                    headerTitleStyle={headerTitleStyle}\n                    headerTransparent={headerTransparent}\n                    headerShadowVisible={headerShadowVisible}\n                    headerBackground={headerBackground}\n                    headerStyle={headerStyle}\n                  />\n                )\n              }\n              style={[\n                StyleSheet.absoluteFill,\n                {\n                  display:\n                    isFocused ||\n                    (nextPresentation != null &&\n                      TRANSPARENT_PRESENTATIONS.includes(nextPresentation))\n                      ? 'flex'\n                      : 'none',\n                },\n                presentation != null &&\n                TRANSPARENT_PRESENTATIONS.includes(presentation)\n                  ? { backgroundColor: 'transparent' }\n                  : null,\n              ]}\n            >\n              <View style={[styles.contentContainer, contentStyle]}>\n                {render()}\n              </View>\n            </Screen>\n          );\n        })}\n      </View>\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  contentContainer: {\n    flex: 1,\n  },\n  backImage: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}