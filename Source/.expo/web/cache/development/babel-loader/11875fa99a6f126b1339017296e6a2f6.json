{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from \"react\";\nimport { colors } from \"../../constants\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CustomCard = function CustomCard(_ref) {\n  var title = _ref.title,\n    value = _ref.value,\n    iconName = _ref.iconName,\n    onPress = _ref.onPress,\n    _ref$type = _ref.type,\n    type = _ref$type === void 0 ? \"danger\" : _ref$type;\n  return _jsxs(TouchableOpacity, {\n    style: styles.container,\n    onPress: onPress,\n    children: [_jsx(View, {\n      style: [styles.iconContainer, styles[\"\" + type]],\n      children: _jsx(Ionicons, {\n        name: iconName,\n        size: 40,\n        color: colors.white\n      })\n    }), _jsx(Text, {\n      style: styles.cardPrimaryText,\n      children: title\n    }), _jsx(Text, {\n      style: styles.cardSecondaryText,\n      children: value\n    })]\n  });\n};\nexport default CustomCard;\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"flex-start\",\n    width: 170,\n    height: 170,\n    backgroundColor: colors.white,\n    padding: 20,\n    borderRadius: 10,\n    margin: 5,\n    elevation: 5\n  },\n  iconContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: colors.primary,\n    borderRadius: 5,\n    padding: 5\n  },\n  cardPrimaryText: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  cardSecondaryText: {\n    fontSize: 15,\n    fontWeight: \"800\"\n  },\n  primary: {\n    backgroundColor: colors.primary\n  },\n  secondary: {\n    backgroundColor: colors.tertiary\n  },\n  warning: {\n    backgroundColor: colors.warning\n  },\n  muted: {\n    backgroundColor: colors.muted\n  }\n});","map":{"version":3,"names":["React","colors","Ionicons","CustomCard","title","value","iconName","onPress","type","styles","container","iconContainer","white","cardPrimaryText","cardSecondaryText","StyleSheet","create","display","flexDirection","justifyContent","alignItems","width","height","backgroundColor","padding","borderRadius","margin","elevation","primary","fontSize","fontWeight","secondary","tertiary","warning","muted"],"sources":["D:/React Native/EasyBuy-Ecommerce-App/Source/components/CustomCard/CustomCard.js"],"sourcesContent":["import { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\r\nimport React from \"react\";\r\nimport { colors } from \"../../constants\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n\r\nconst CustomCard = ({ title, value, iconName, onPress, type = \"danger\" }) => {\r\n  return (\r\n    <TouchableOpacity style={styles.container} onPress={onPress}>\r\n      <View style={[styles.iconContainer, styles[`${type}`]]}>\r\n        <Ionicons name={iconName} size={40} color={colors.white} />\r\n      </View>\r\n      <Text style={styles.cardPrimaryText}>{title}</Text>\r\n      <Text style={styles.cardSecondaryText}>{value}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nexport default CustomCard;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-start\",\r\n    width: 170,\r\n    height: 170,\r\n    backgroundColor: colors.white,\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    margin: 5,\r\n    elevation: 5,\r\n  },\r\n  iconContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: colors.primary,\r\n    borderRadius: 5,\r\n    padding: 5,\r\n  },\r\n  cardPrimaryText: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n  cardSecondaryText: {\r\n    fontSize: 15,\r\n    fontWeight: \"800\",\r\n  },\r\n  primary: {\r\n    backgroundColor: colors.primary,\r\n  },\r\n  secondary: {\r\n    backgroundColor: colors.tertiary,\r\n  },\r\n  warning: {\r\n    backgroundColor: colors.warning,\r\n  },\r\n  muted: {\r\n    backgroundColor: colors.muted,\r\n  },\r\n});\r\n"],"mappings":";;;;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM;AACf,SAASC,QAAQ,QAAQ,oBAAoB;AAAC;AAAA;AAE9C,IAAMC,UAAU,GAAG,SAAbA,UAAU,OAA6D;EAAA,IAAvDC,KAAK,QAALA,KAAK;IAAEC,KAAK,QAALA,KAAK;IAAEC,QAAQ,QAARA,QAAQ;IAAEC,OAAO,QAAPA,OAAO;IAAA,iBAAEC,IAAI;IAAJA,IAAI,0BAAG,QAAQ;EACpE,OACE,MAAC,gBAAgB;IAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAC,OAAO,EAAEH,OAAQ;IAAA,WAC1D,KAAC,IAAI;MAAC,KAAK,EAAE,CAACE,MAAM,CAACE,aAAa,EAAEF,MAAM,MAAID,IAAI,CAAG,CAAE;MAAA,UACrD,KAAC,QAAQ;QAAC,IAAI,EAAEF,QAAS;QAAC,IAAI,EAAE,EAAG;QAAC,KAAK,EAAEL,MAAM,CAACW;MAAM;IAAG,EACtD,EACP,KAAC,IAAI;MAAC,KAAK,EAAEH,MAAM,CAACI,eAAgB;MAAA,UAAET;IAAK,EAAQ,EACnD,KAAC,IAAI;MAAC,KAAK,EAAEK,MAAM,CAACK,iBAAkB;MAAA,UAAET;IAAK,EAAQ;EAAA,EACpC;AAEvB,CAAC;AAED,eAAeF,UAAU;AAEzB,IAAMM,MAAM,GAAGM,UAAU,CAACC,MAAM,CAAC;EAC/BN,SAAS,EAAE;IACTO,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,YAAY;IACxBC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXC,eAAe,EAAEtB,MAAM,CAACW,KAAK;IAC7BY,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,EAAE;IAChBC,MAAM,EAAE,CAAC;IACTC,SAAS,EAAE;EACb,CAAC;EACDhB,aAAa,EAAE;IACbM,OAAO,EAAE,MAAM;IACfE,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBG,eAAe,EAAEtB,MAAM,CAAC2B,OAAO;IAC/BH,YAAY,EAAE,CAAC;IACfD,OAAO,EAAE;EACX,CAAC;EACDX,eAAe,EAAE;IACfgB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDhB,iBAAiB,EAAE;IACjBe,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDF,OAAO,EAAE;IACPL,eAAe,EAAEtB,MAAM,CAAC2B;EAC1B,CAAC;EACDG,SAAS,EAAE;IACTR,eAAe,EAAEtB,MAAM,CAAC+B;EAC1B,CAAC;EACDC,OAAO,EAAE;IACPV,eAAe,EAAEtB,MAAM,CAACgC;EAC1B,CAAC;EACDC,KAAK,EAAE;IACLX,eAAe,EAAEtB,MAAM,CAACiC;EAC1B;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}