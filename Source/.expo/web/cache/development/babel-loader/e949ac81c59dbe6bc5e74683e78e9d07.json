{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport HomeScreen from \"../../screens/user/HomeScreen\";\nimport { colors } from \"../../constants\";\nimport UserProfileScreen from \"../../screens/profile/UserProfileScreen\";\nimport HomeIconActive from \"../../assets/icons/bar_home_icon_active.png\";\nimport HomeIcon from \"../../assets/icons/bar_home_icon.png\";\nimport userIcon from \"../../assets/icons/bar_profile_icon.png\";\nimport userIconActive from \"../../assets/icons/bar_profile_icon_active.png\";\nimport MyOrderScreen from \"../../screens/user/MyOrderScreen\";\nimport CategoriesScreen from \"../../screens/user/CategoriesScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Tabs = function Tabs(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var user = route.params.user;\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref2) {\n      var route = _ref2.route;\n      return {\n        tabBarHideOnKeyboard: true,\n        tabBarStyle: [{\n          display: \"flex\"\n        }, null],\n        headerShown: false,\n        tabBarShowLabel: false,\n        tabBarActiveTintColor: colors.primary,\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused;\n          var routename = route.name;\n          if (routename == \"home\") {\n            return _jsx(TouchableOpacity, {\n              disabled: true,\n              children: focused == true ? _jsx(Image, {\n                source: HomeIconActive,\n                style: StyleSheet.tabIconStyle\n              }) : _jsx(Image, {\n                source: HomeIcon,\n                style: StyleSheet.tabIconStyle\n              })\n            });\n          } else if (routename == \"categories\") {\n            return _jsx(TouchableOpacity, {\n              disabled: true,\n              children: focused == true ? _jsx(Ionicons, {\n                name: \"ios-apps-sharp\",\n                size: 29,\n                color: colors.primary\n              }) : _jsx(Ionicons, {\n                name: \"ios-apps-sharp\",\n                size: 29,\n                color: colors.muted\n              })\n            });\n          } else if (routename == \"myorder\") {\n            return _jsx(TouchableOpacity, {\n              disabled: true,\n              children: focused == true ? _jsx(Ionicons, {\n                name: \"cart-outline\",\n                size: 29,\n                color: colors.primary\n              }) : _jsx(Ionicons, {\n                name: \"cart-outline\",\n                size: 29,\n                color: colors.muted\n              })\n            });\n          } else if (routename == \"user\") {\n            return _jsx(TouchableOpacity, {\n              disabled: true,\n              children: focused == true ? _jsx(Image, {\n                source: userIconActive,\n                style: StyleSheet.tabIconStyle\n              }) : _jsx(Image, {\n                source: userIcon,\n                style: StyleSheet.tabIconStyle\n              })\n            });\n          }\n        },\n        tabBarStyle: {\n          borderTopLeftRadius: 20,\n          borderTopRightRadius: 20,\n          backgroundColor: colors.white\n        }\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"home\",\n      component: HomeScreen,\n      initialParams: {\n        user: user\n      },\n      tabBarOptions: {\n        style: {\n          position: \"absolute\"\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"categories\",\n      component: CategoriesScreen,\n      initialParams: {\n        user: user\n      },\n      tabBarOptions: {\n        tabBarHideOnKeyboard: true,\n        style: {\n          position: \"absolute\"\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"myorder\",\n      component: MyOrderScreen,\n      initialParams: {\n        user: user\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"user\",\n      component: UserProfileScreen,\n      initialParams: {\n        user: user\n      }\n    })]\n  });\n};\nexport default Tabs;\nvar styles = StyleSheet.create({\n  tabIconStyle: {\n    width: 10,\n    height: 10\n  }\n});","map":{"version":3,"names":["React","createBottomTabNavigator","Ionicons","HomeScreen","colors","UserProfileScreen","HomeIconActive","HomeIcon","userIcon","userIconActive","MyOrderScreen","CategoriesScreen","Tab","Tabs","navigation","route","user","params","tabBarHideOnKeyboard","tabBarStyle","display","headerShown","tabBarShowLabel","tabBarActiveTintColor","primary","tabBarIcon","focused","routename","name","StyleSheet","tabIconStyle","muted","borderTopLeftRadius","borderTopRightRadius","backgroundColor","white","style","position","styles","create","width","height"],"sources":["D:/React Native/EasyBuy-Ecommerce-App/Source/routes/tabs/Tabs.js"],"sourcesContent":["import { StyleSheet, Image, TouchableOpacity } from \"react-native\";\r\nimport React from \"react\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport HomeScreen from \"../../screens/user/HomeScreen\";\r\nimport { colors } from \"../../constants\";\r\nimport UserProfileScreen from \"../../screens/profile/UserProfileScreen\";\r\nimport HomeIconActive from \"../../assets/icons/bar_home_icon_active.png\";\r\nimport HomeIcon from \"../../assets/icons/bar_home_icon.png\";\r\nimport userIcon from \"../../assets/icons/bar_profile_icon.png\";\r\nimport userIconActive from \"../../assets/icons/bar_profile_icon_active.png\";\r\nimport MyOrderScreen from \"../../screens/user/MyOrderScreen\";\r\nimport CategoriesScreen from \"../../screens/user/CategoriesScreen\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst Tabs = ({ navigation, route }) => {\r\n  const { user } = route.params;\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        tabBarHideOnKeyboard: true,\r\n        tabBarStyle: [\r\n          {\r\n            display: \"flex\",\r\n          },\r\n          null,\r\n        ],\r\n        headerShown: false,\r\n        tabBarShowLabel: false,\r\n        tabBarActiveTintColor: colors.primary,\r\n\r\n        tabBarIcon: ({ focused }) => {\r\n          let routename = route.name;\r\n          if (routename == \"home\") {\r\n            return (\r\n              <TouchableOpacity disabled>\r\n                {focused == true ? (\r\n                  <Image\r\n                    source={HomeIconActive}\r\n                    style={StyleSheet.tabIconStyle}\r\n                  />\r\n                ) : (\r\n                  <Image source={HomeIcon} style={StyleSheet.tabIconStyle} />\r\n                )}\r\n              </TouchableOpacity>\r\n            );\r\n          } else if (routename == \"categories\") {\r\n            return (\r\n              <TouchableOpacity disabled>\r\n                {focused == true ? (\r\n                  <Ionicons\r\n                    name=\"ios-apps-sharp\"\r\n                    size={29}\r\n                    color={colors.primary}\r\n                  />\r\n                ) : (\r\n                  <Ionicons\r\n                    name=\"ios-apps-sharp\"\r\n                    size={29}\r\n                    color={colors.muted}\r\n                  />\r\n                )}\r\n              </TouchableOpacity>\r\n            );\r\n          } else if (routename == \"myorder\") {\r\n            return (\r\n              <TouchableOpacity disabled>\r\n                {focused == true ? (\r\n                  <Ionicons\r\n                    name=\"cart-outline\"\r\n                    size={29}\r\n                    color={colors.primary}\r\n                  />\r\n                ) : (\r\n                  <Ionicons\r\n                    name=\"cart-outline\"\r\n                    size={29}\r\n                    color={colors.muted}\r\n                  />\r\n                )}\r\n              </TouchableOpacity>\r\n            );\r\n          } else if (routename == \"user\") {\r\n            return (\r\n              <TouchableOpacity disabled>\r\n                {focused == true ? (\r\n                  <Image\r\n                    source={userIconActive}\r\n                    style={StyleSheet.tabIconStyle}\r\n                  />\r\n                ) : (\r\n                  <Image source={userIcon} style={StyleSheet.tabIconStyle} />\r\n                )}\r\n              </TouchableOpacity>\r\n            );\r\n          }\r\n        },\r\n        tabBarStyle: {\r\n          borderTopLeftRadius: 20,\r\n          borderTopRightRadius: 20,\r\n          backgroundColor: colors.white,\r\n        },\r\n      })}\r\n    >\r\n      <Tab.Screen\r\n        name=\"home\"\r\n        component={HomeScreen}\r\n        initialParams={{ user: user }}\r\n        tabBarOptions={{\r\n          style: {\r\n            position: \"absolute\",\r\n          },\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"categories\"\r\n        component={CategoriesScreen}\r\n        initialParams={{ user: user }}\r\n        tabBarOptions={{\r\n          tabBarHideOnKeyboard: true,\r\n          style: {\r\n            position: \"absolute\",\r\n          },\r\n        }}\r\n      />\r\n      {\r\n        // Wishlist is ready yet!\r\n        <Tab.Screen\r\n          name=\"myorder\"\r\n          component={MyOrderScreen}\r\n          initialParams={{ user: user }}\r\n        />\r\n      }\r\n      <Tab.Screen\r\n        name=\"user\"\r\n        component={UserProfileScreen}\r\n        initialParams={{ user: user }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n\r\nconst styles = StyleSheet.create({\r\n  tabIconStyle: {\r\n    width: 10,\r\n    height: 10,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}